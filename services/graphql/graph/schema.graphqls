type Transaction {
  id: Int
  rule_instance_id: Int
  author: String
  author_device_id: Float
  author_device_latlng: Float
  author_role: String
  equilibrium_time: String
  sum_value: String
  transaction_items: [TransactionItem!]!
}

input TransactionInput {
  id: Int
  rule_instance_id: Int
  author: String
  author_device_id: Float
  author_device_latlng: Float
  author_role: String
}

interface ITransactionItem {
  id: Int
  transaction_id: Int
  item_id: String
  price: String
  quantity: String
  debitor_first: Boolean
  rule_instance_id: Int
  unit_of_measurement: String
  units_measured: String
  debitor: String
  creditor: String
  debitor_profile_id: Int
  creditor_profile_id: Int
  debitor_approval_time: String
  creditor_approval_time: String
  debitor_expiration_time: String
  creditor_expiration_time: String
  debitor_rejection_time: String
  creditor_rejection_time: String
}

type TransactionItem implements ITransactionItem {
  id: Int
  transaction_id: Int
  item_id: String
  price: String
  quantity: String
  debitor_first: Boolean
  rule_instance_id: Int
  unit_of_measurement: String
  units_measured: String
  debitor: String
  creditor: String
  debitor_profile_id: Int
  creditor_profile_id: Int
  debitor_approval_time: String
  creditor_approval_time: String
  debitor_expiration_time: String
  creditor_expiration_time: String
  debitor_rejection_time: String
  creditor_rejection_time: String
  approvers: [Approver]
}

type Approver {
  id: Int
  rule_instance_id: Int
  transaction_id: Int
  transaction_item_id: String
  account_name: String
  account_role: String
  device_id: String
  device_latlng: String
  approval_time: String
  rejection_time: String
  expiration_time: String
}

input TransactionItemInput {
  id: Int
  transaction_id: Int
  item_id: String
  price: String
  quantity: String
  debitor_first: Boolean
  rule_instance_id: Int
  unit_of_measurement: String
  units_measured: String
  debitor: String
  creditor: String
  debitor_profile_id: Int
  creditor_profile_id: Int
  debitor_approval_time: String
  creditor_approval_time: String
  debitor_expiration_time: String
  creditor_expiration_time: String
  debitor_rejection_time: String
  creditor_rejection_time: String
}

type Query {
  rules(transaction_items: [TransactionItemInput!]): Transaction
  requestByID(transaction_id: Int!, auth_account: String!): Transaction
  requestsByAccount(account_name: String!, auth_account: String!): Transaction
  transactionByID(transaction_id: Int!, auth_account: String!): Transaction
  transactionsByAccount(account_name: String!, auth_account: String!): Transaction
}

type Mutation {
  createRequest(transaction_items: [TransactionItemInput!], auth_account: String!): Transaction
  approveRequest(transaction_id: Int!, account_name: String!, account_role: String!, auth_account: String!): Transaction
}

schema {
  query: Query
  mutation: Mutation
}