#@ load("@ytt:data", "data")
#@ app = "transaction-by-id"
#@ app_port = data.values.TRANSACTION_BY_ID_PORT
#@ image_version = "latest"
#@ image = "{}/{}/{}/{}:{}".format(data.values.GITHUB_REGISTRY, data.values.GITHUB_ORG, data.values.GITHUB_REPO_NAME, app, image_version)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ app + "-deployment"
  labels:
    app: #@ app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: #@ app
  template:
    metadata:
      labels:
        app: #@ app
    spec:
      containers:
        - name: #@ app
          image: #@ image
          ports:
            - containerPort: #@ app_port
          env:
            - name: PGDATABASE
              value: #@ data.values.PGDATABASE
            - name: PGUSER
              value: #@ data.values.PGUSER
            - name: PGPASSWORD
              value: #@ data.values.PGPASSWORD
            - name: PGHOST
              value: postgres
            - name: PGPORT
              value: #@ "{}".format(data.values.PGPORT)
            - name: PG_MAX_CONNECTIONS
              value: "20"
            - name: PG_IDLE_TIMEOUT
              value: "10000"
            - name: PG_CONN_TIMEOUT
              value: "500"
            - name: READINESS_CHECK_PATH
              value: #@ data.values.READINESS_CHECK_PATH
            - name: TRANSACTION_BY_ID_PORT
              value: #@ "{}".format(app_port)
          livenessProbe:
            httpGet:
              path: #@ data.values.READINESS_CHECK_PATH
              port: #@ app_port
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: #@ data.values.READINESS_CHECK_PATH
              port: #@ app_port
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: #@ app
spec:
  selector:
    app: #@ app
  ports:
    - protocol: TCP
      port: #@ app_port
      targetPort: #@ app_port
  type: ClusterIP