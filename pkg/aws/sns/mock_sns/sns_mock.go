// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/systemaccounting/mxfactorial/pkg/aws/sns (interfaces: ISNS)

// Package mock_sns is a generated GoMock package.
package mock_sns

import (
	reflect "reflect"

	sns "github.com/aws/aws-sdk-go/service/sns"
	gomock "github.com/golang/mock/gomock"
)

// MockISNS is a mock of ISNS interface.
type MockISNS struct {
	ctrl     *gomock.Controller
	recorder *MockISNSMockRecorder
}

// MockISNSMockRecorder is the mock recorder for MockISNS.
type MockISNSMockRecorder struct {
	mock *MockISNS
}

// NewMockISNS creates a new mock instance.
func NewMockISNS(ctrl *gomock.Controller) *MockISNS {
	mock := &MockISNS{ctrl: ctrl}
	mock.recorder = &MockISNSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISNS) EXPECT() *MockISNSMockRecorder {
	return m.recorder
}

// PublishMessage mocks base method.
func (m *MockISNS) PublishMessage(arg0 *sns.PublishInput) (*sns.PublishOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublishMessage", arg0)
	ret0, _ := ret[0].(*sns.PublishOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PublishMessage indicates an expected call of PublishMessage.
func (mr *MockISNSMockRecorder) PublishMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishMessage", reflect.TypeOf((*MockISNS)(nil).PublishMessage), arg0)
}
